{"version":3,"sources":["firebase.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/components/CustomListItem.js","screens/HomeScreen.js","screens/AddChatScreen.js","screens/ChatScreen.js","App.js"],"names":["db","firebase","length","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","LoginScreen","navigation","useState","email","setemail","password","setpassword","useEffect","onAuthStateChanged","authUser","console","log","replace","signIn","signInWithEmailAndPassword","catch","error","alert","KeyboardAvoidingView","style","styles","container","StatusBar","source","uri","width","height","View","inputContainer","placeholder","autoFocus","type","value","onChangeText","text","secureTextEntry","onSubmitEditing","containerStyle","button","title","onPress","navigate","StyleSheet","create","flex","alignItems","justifyContent","padding","marginTop","RegisterScreen","name","setname","profilepic","setprofilepic","useLayoutEffect","setOptions","headerTruncatedBackTitle","register","createUserWithEmailAndPassword","then","user","updateProfile","displayName","photoURL","message","behaviour","h3","marginBottom","inputcontainer","raised","backgroundColor","CustomListItem","id","chatName","enterChat","chatMessages","setchatMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","key","bottomDivider","rounded","Content","Title","fontWeight","Subtitle","numberOfLines","HomeScreen","chats","setchats","signOutUser","signOut","headerTitleAlign","headerStyle","headerTitleStyle","color","headerTintcolor","headerLeft","marginLeft","TouchableOpacity","activeOpacity","currentUser","headerRight","flexDirection","marginRight","Entypo","size","SimpleLineIcons","SafeAreaView","AddChatScreen","input","setinput","createChat","a","async","add","goBack","leftIcon","AntDesign","disabled","YellowBox","ignoreWarnings","_console","_","clone","warn","indexOf","ChatScreen","route","messages","setmessages","headerTitle","paddingRight","Text","params","FontAwesome","Ionicons","sendMessage","Keyboard","dismiss","timestamp","FieldValue","serverTimestamp","Platform","OS","keyboardVerticalOffset","TouchableWithoutFeedback","ScrollView","contentContainerStyle","paddingTop","reciever","position","bottom","right","senderText","sender","footer","TextInput","textInput","alignSelf","borderRadius","maxWidth","senderName","left","fontSize","borderColor","borderWidth","Stack","createStackNavigator","globalScreenOptions","headerTintColor","App","NavigationContainer","Navigator","initialRouteName","screenOptions","Screen","component"],"mappings":"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","file":"static/js/app.79e4c511.chunk.js","sourcesContent":["import * as firebase from 'firebase'\n\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAr-WAJVECuwSITdE8Y5Paefy38Ls9xT4U\",\n    authDomain: \"signal-native-6ff0f.firebaseapp.com\",\n    projectId: \"signal-native-6ff0f\",\n    storageBucket: \"signal-native-6ff0f.appspot.com\",\n    messagingSenderId: \"790074988790\",\n    appId: \"1:790074988790:web:2b98e97a07969a6b94f4d7\",\n    measurementId: \"G-Q6LJR7GYVZ\"\n  };\n\n  let app ;\n\n  if (firebase.apps.length === 0) {\n\n     app = firebase.initializeApp(firebaseConfig);\n  } else {\n        app = firebase.app()\n  }\n\n\n  const db = app.firestore();\n  const auth = firebase.auth();\n\n  export {db , auth};\n","import { StatusBar } from 'expo-status-bar'\nimport { auth } from '/home/bhubesh/signal-react-native/firebase.js';\nimport React, { useEffect, useState } from 'react'\nimport { KeyboardAvoidingView, StyleSheet, Text, View } from 'react-native'\n\n// react native elements\n\nimport { Button, Input , Image } from 'react-native-elements';\n\nconst LoginScreen = ({navigation}) => {\n\n    const [email, setemail] = useState('');\n    const [password, setpassword] = useState('');\n\n    useEffect(() => {\n     const unsubscribe =  auth.onAuthStateChanged((authUser) => {\n         console.log(authUser);\n          if (authUser) {\n              navigation.replace('Home');\n          }\n      })\n\n      return unsubscribe;\n    }, [])\n\n    // signIn\n\n    const signIn = () => {\n            auth.signInWithEmailAndPassword(email , password ) \n            .catch((error) => alert(error));\n    }\n    return (\n        <KeyboardAvoidingView style = {styles.container}>\n            <StatusBar style = 'light'></StatusBar>\n            {/* <Text>I am Login Screen</Text> */}\n            <Image source = {{\n                uri : 'https://blog.mozilla.org/internetcitizen/files/2018/08/signal-logo.png'\n            }}\n            style = {{ width : 200 , height : 200}}\n            />\n\n            <View style = {styles.inputContainer}>\n                <Input placeholder = 'Email' \n                autoFocus type = 'Email'\n                value = {email} onChangeText = {(text) =>setemail(text) }\n                ></Input>\n                <Input placeholder = 'Password' secureTextEntry type = 'password'\n                value = {password} onChangeText = {(text) =>setpassword(text) }\n                onSubmitEditing = {signIn}\n                ></Input>\n            </View>\n\n            <Button containerStyle = {styles.button} title = 'Login' onPress = {signIn}></Button>\n            <Button onPress = {() => navigation.navigate('Register')} containerStyle = {styles.button} title = 'Register' type = 'outline'></Button>\n            <View style = {{height : 100}}></View>\n        </KeyboardAvoidingView>\n    )\n}\n\nexport default LoginScreen\n\nconst styles = StyleSheet.create({\n\n    container : {\n        flex : 1,\n        alignItems : 'center',\n        justifyContent : 'center',\n        padding : '10',\n\n\n    },\n    inputContainer : {\n        width : 300\n    },\n\n    button : {\n        width : 200 ,\n        marginTop : 10\n    }\n})\n","import { StatusBar } from 'expo-status-bar'\nimport { auth } from '/home/bhubesh/signal-react-native/firebase.js'\nimport React, { useLayoutEffect, useState } from 'react'\nimport {  KeyboardAvoidingView, StyleSheet, View } from 'react-native'\nimport { Input , Button , Text } from 'react-native-elements'\n\nconst RegisterScreen = ({navigation}) => {\n\n    // useState\n\n    const [name, setname] = useState('');\n    const [email, setemail] = useState('');\n    const [password, setpassword] = useState('');\n    const [profilepic, setprofilepic] = useState('');\n\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n          headerTruncatedBackTitle : 'Back to Login'\n        })\n      }, [navigation])  //passing navigation as dependency\n\n    //   ios\n    // Register \n\n    const register = () => {\n            auth.createUserWithEmailAndPassword(email , password)\n            .then((authUser) => {\n                authUser.user.updateProfile({\n                    displayName : name ,\n                    photoURL : profilepic || 'https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png' ,\n\n                }) \n            })\n            .catch((error) => alert(error.message))\n    }\n\n    const Register = () => {\n\n    }\n\n\n\n    return (\n        <KeyboardAvoidingView behaviour = 'padding' \n        style = {styles.container}>\n            <StatusBar style = 'light'></StatusBar>\n            <Text\n            h3 style = {{marginBottom : 50}}\n            >Create a Signal Account\n            </Text>\n\n\n            <View style = {styles.inputcontainer}>\n                <Input placeholder = 'Full Name ' autoFocus type = 'text' \n                value = {name} \n                onChangeText = {(text) => setname(text)}\n                ></Input>\n                <Input placeholder = 'Email ' autoFocus type = 'email' \n                value = {email} \n                onChangeText = {(text) => setemail(text)}\n                ></Input>\n                <Input placeholder = 'Password' autoFocus secureTextEntry type = 'password' \n                value = {password} \n                onChangeText = {(text) => setpassword(text)}\n                ></Input>\n                <Input placeholder = 'Profilepic Url' autoFocus type = 'text' \n                value = {profilepic} \n                onChangeText = {(text) => setprofilepic(text)}\n                onSubmitEditing = {register}\n                ></Input>\n            </View>\n\n            <Button\n            containerStyle = {styles.button}\n            raised \n            title = 'Register'\n            onPress = {register}\n            ></Button>\n            <View style = {{height : 100}} ></View>\n        </KeyboardAvoidingView>\n    )\n}\n\nexport default RegisterScreen\n\nconst styles = StyleSheet.create({\n    container : {\n        flex : 1,\n        alignItems :'center',\n        justifyContent : 'center',\n        padding : 10,\n        backgroundColor : 'white'\n    },\n    button : {\n        width : 200,\n        marginTop : 10\n    },\n    inputcontainer : {\n        width : 300\n    }\n})\n","import React, { useEffect, useState } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { Avatar, ListItem } from 'react-native-elements'\nimport { db } from '../../firebase';\n\nconst CustomListItem = ({id , chatName , enterChat , displayName , message}) => {\n\n    const [chatMessages, setchatMessages] = useState([]);\n\n\n    useEffect(() => {\n       const unsubscribe = db.collection('chats').doc(id)\n       .collection('messages').orderBy('timestamp' , 'asc')\n       .onSnapshot((snapshot) => \n       setchatMessages(snapshot.docs.map((doc) => doc.data()))\n       );\n       return unsubscribe\n    }, [])\n    return (\n        <ListItem  key = {id} onPress = {() => enterChat(id , chatName)} key = {id} bottomDivider >\n            <Avatar \n            rounded\n            source = {{\n                uri : chatMessages?.[0]?.photoURL ||  'https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png'\n            }}\n            ></Avatar>\n\n            <ListItem.Content>\n                <ListItem.Title style = {{fontWeight : '800'}}>\n                        {chatName}\n                </ListItem.Title>\n\n                <ListItem.Subtitle numberOfLines = {1}\n                    \n                >\n                        {chatMessages?.[0]?.displayName} : {\n                            chatMessages?.[0]?.message\n                        }\n                </ListItem.Subtitle>\n            </ListItem.Content>\n        </ListItem>\n    )\n}\n\nexport default CustomListItem\n\nconst styles = StyleSheet.create({})\n","import { auth, db } from '/home/bhubesh/signal-react-native/firebase.js'\nimport React, { useEffect, useLayoutEffect, useState } from 'react'\nimport { StyleSheet, Text, View , SafeAreaView , TouchableOpacity} from 'react-native'\nimport { Avatar } from 'react-native-elements'\nimport { ScrollView } from 'react-native-gesture-handler'\n// import { SafeAreaView } from 'react-native-safe-area-context'\nimport CustomListItem from './components/CustomListItem'\nimport {AntDesign , Entypo, SimpleLineIcons} from '@expo/vector-icons'\nconst HomeScreen = ({navigation}) => { \n\n\n    const [chats, setchats] = useState([])\n\n    // signout\n    // it logouts the from the current user\n    const signOutUser = () => {\n        auth.signOut()\n        .then(() => {\n            navigation.replace('Login')\n        })\n    }\n\n// using the useEfect function\n\n    useEffect(() => {\n       const unsubscribe = db.collection('chats')\n       .onSnapshot(snapshot => (\n           setchats(snapshot.docs.map(doc => ({\n               id : doc.id,\n               data : doc.data(),\n           })))\n       ))\n\n       return unsubscribe;\n    }, [])\n\n    useLayoutEffect(() => {\n       navigation.setOptions({\n           title : 'Signal',\n           headerTitleAlign : 'center',\n           headerStyle : {backgroundColor : '#fff'},\n            headerTitleStyle : {color : 'black'},\n            headerTintcolor : 'black',\n            headerLeft : () => (\n                <View style = {{marginLeft : 20 }}>\n                    <TouchableOpacity onPress = {signOutUser} activeOpacity = {0.5}  >\n                    <Avatar\n                    rounded\n                    source = {{\n                        uri : auth?.currentUser?.photoURL\n                    }}\n                    >\n                    </Avatar>\n                    </TouchableOpacity>\n                </View>\n       ),\n\n       headerRight : () => (\n           <View style = {{\n               flexDirection : 'row',\n               justifyContent : 'space-between',\n               width : 80 , \n               marginRight : 20\n           }}>\n               <TouchableOpacity>\n                   <Entypo name = 'camera' size = {24} color = 'black'></Entypo>\n               </TouchableOpacity>\n               <TouchableOpacity>\n                   <SimpleLineIcons \n                   onPress = {() => navigation.navigate('AddChat')}\n                   name = 'pencil' color = 'black' size = {24}></SimpleLineIcons>\n               </TouchableOpacity>\n           \n\n           </View>\n       ),\n    });\n    }, [navigation])\n\n\n    const enterChat = (id , chatName) => {\n        navigation.navigate('Chat' , {\n            id ,\n            chatName ,\n        })\n    }\n\n    return (\n        <SafeAreaView>\n            <ScrollView style = {styles.container}>\n                {chats.map(({id , data : {chatName }}) => (\n                    <CustomListItem \n                    key = {id}\n                    id = {id} \n                    enterChat = {enterChat}\n                    chatName = {chatName}\n                    ></CustomListItem>\n                ))}\n            {/* <Text>This is HomePage!! Boom</Text> */}\n            {/* <CustomListItem></CustomListItem> */}\n            </ScrollView>\n        </SafeAreaView>\n    )\n}\n\nexport default HomeScreen\n\nconst styles = StyleSheet.create({\n    container : {\n        height : '100%',\n\n    }\n})\n","import React, { useLayoutEffect, useState } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { Button, Input } from 'react-native-elements'\nimport { AntDesign } from '@expo/vector-icons'\nimport { db } from '../firebase'\n\nconst AddChatScreen = ({navigation}) => {\n\n    const [input, setinput] = useState('')\n\n    useLayoutEffect(() => {\n      navigation.setOptions({\n          title : 'Add a New Chat',\n\n      })\n    }, [navigation])\n\n    const createChat = async () => {\n        await db.collection('chats').add({\n            chatName : input \n        })\n        .then (() => {\n            navigation.goBack();\n\n        })\n        .catch((error)=> alert(error) )\n\n    }\n\n\n    return (\n        <View style = {styles.container}>\n            {/* <Text>Chat</Text> */}\n            <Input placeholder = 'Enter a Chat Name'\n            value = {input}\n            onSubmitEditing = {createChat}\n            onChangeText = {(text ) => setinput(text)}\n            leftIcon =  {\n                <View>\n\n                    <AntDesign name = 'wechat'  size = {24} color= 'black'></AntDesign>\n                </View>\n            }\n            >\n            </Input>\n            <Button disabled = {input} onPress = {createChat} title = 'Add New Chat'> New chat</Button>\n        </View>\n    )\n}\n\nexport default AddChatScreen\n\nconst styles = StyleSheet.create({\n    container : {\n        backgroundColor : 'white',\n        padding : 30,\n        height : '100%'\n    }\n})\n","import { AntDesign, FontAwesome, Ionicons } from '@expo/vector-icons'\nimport { StatusBar } from 'expo-status-bar'\nimport React, { useLayoutEffect, useState } from 'react'\nimport { StyleSheet, TextInput,Text , TouchableOpacity, View , SafeAreaView, KeyboardAvoidingView, Platform, ScrollView, Keyboard, TouchableWithoutFeedback} from 'react-native'\nimport { Avatar } from 'react-native-elements'\nimport { auth, db } from '/home/bhubesh/signal-react-native/firebase.js'\n// import {firebase} from '/home/bhubesh/signal-react-native/firebase.js'\nimport * as firebase from 'firebase'\n\nimport { YellowBox } from 'react-native';\nimport _ from 'lodash';\n\nYellowBox.ignoreWarnings(['Setting a timer']);\nconst _console = _.clone(console);\nconsole.warn = message => {\n  if (message.indexOf('Setting a timer') <= -1) {\n    _console.warn(message);\n  }\n};\n\nconst ChatScreen = ({navigation , route }) => {\n\n    const [input, setinput] = useState('');\n    const [messages, setmessages] = useState([])\n\n    useLayoutEffect(() => {\n       navigation.setOptions({\n        title : 'chat',\n        headerTitleAlign : 'left',\n        headerTitle : () => (\n            <View\n            style = {{\n                flexDirection : \"row\",\n                alignItems : 'center',\n                paddingRight : 50,\n            }}\n            >\n                {/* its important */}\n                <Avatar rounded source = {{uri : messages[0]?.data.photoURL}} ></Avatar>\n                <Text\n                style = {{color : 'white' , marginLeft : 10 , fontWeight : '700'}}\n                > {route.params.chatName} </Text>\n            </View>\n        ),\n        headerLeft : () => (\n            <TouchableOpacity\n            style = {{marginLeft : 10}}\n            onPress = {navigation.goBack}\n            >\n                <AntDesign name=\"arrowleft\" size={24} color=\"white\" />\n            </TouchableOpacity>\n        ),\n        headerRight : () => (\n            <View\n            style = {{\n                flexDirection : 'row',\n                justifyContent : 'space-between',\n                width : 80 ,\n                marginRight  : 20\n            }}\n            >\n                <TouchableOpacity>\n                    <FontAwesome name = 'video-camera' size = {22} color = 'white'></FontAwesome>\n                </TouchableOpacity>\n                <TouchableOpacity>\n                    <Ionicons name = 'call' size = {22} color = 'white'></Ionicons>\n                </TouchableOpacity>\n            </View>\n        )\n       })\n       \n    }, [navigation , messages])\n\n    const sendMessage = () => {\n        Keyboard.dismiss(); //it dismisses the keyboard after dismissing\n        db.collection('chats').doc(route.params.id)\n        .collection('messages').add({\n            timestamp : firebase.firestore.FieldValue.serverTimestamp(),\n            message :input ,\n            displayName : auth.currentUser.displayName,\n            email : auth.currentUser.email,\n            photoURL : auth.currentUser.photoURL\n        })\n\n        setinput('')\n    }\n\n\n    // useLayout\n\n    useLayoutEffect(() => {\n        const unsubscribe = db.collection('chats')\n        .doc(route.params.id).collection('messages')\n        .orderBy('timestamp' ,'asc')\n        .onSnapshot((snapshot) => setmessages(\n            snapshot.docs.map(doc => ({\n                id : doc.id,\n                data : doc.data()\n            }))\n        ))\n        return unsubscribe;\n    }, [route])\n\n    return (\n        <SafeAreaView style = {{\n            flex : 1 ,\n            backgroundColor : 'white'\n        }}>\n            <StatusBar style = 'light'></StatusBar>\n            <KeyboardAvoidingView\n            behaviour = {Platform.OS === 'ios' ? \"padding\" : 'height'}\n            style = {styles.container}\n            keyboardVerticalOffset = {90}\n            >\n\n                    {/* <> */}\n                <TouchableWithoutFeedback onPress = {Keyboard.dismiss}>\n                    <>\n                <ScrollView contentContainerStyle = {{paddingTop : 15}}>\n                    {/* chatmessage */}\n            {messages.map(({id , data}) => (\n                data.email == auth.currentUser.email ? (\n                    <View key = {id} style = {styles.reciever}>\n                    <Avatar\n                    position = \"absolute\"\n                    rounded\n                    containerStyle = {{\n                        position : 'absolute',\n                        bottom   : -17 ,\n                        right : -6 \n                    }}\n                    size = {25}\n                    source = {{\n                        uri : data.photoURL,\n                    }}\n                    ></Avatar>\n                       <Text style = {styles.senderText}>\n                           {data.message}\n                       </Text>\n                       {/* <Text style = {styles.senderName}>\n                           {data.displayName}\n                       </Text> */}\n               </View>\n                ):(\n                    <View key = {id} style = {styles.sender}>\n                         <Avatar\n                         position = \"absolute\"\n                         rounded\n                         containerStyle = {{\n                             position : 'absolute',\n                             bottom   : -17 ,\n                             right : -6 \n                         }}\n                         size = {25}\n                         source = {{\n                             uri : data.photoURL,\n                         }}\n                         ></Avatar>\n                            <Text style = {styles.senderText}>\n                                {data.message}\n                            </Text>\n                            {/* <Text style = {styles.senderName}>\n                                {data.displayName}\n                            </Text> */}\n                    </View>\n                )\n                    ))}\n                </ScrollView>\n\n                <View style = {styles.footer}>\n                <TextInput value = {input} \n                onChangeText = {(text => setinput(text))}\n                onSubmitEditing = {sendMessage} \n                placeholder = 'Signal Message'\n                style = {styles.textInput}\n                >\n                </TextInput>\n                <TouchableOpacity \n                    onPress = {sendMessage}\n                    activeOpacity = {0.5}>\n                        <Ionicons name=\"send\" size={24} color=\"black\" />\n                    </TouchableOpacity>\n                </View>\n                </>\n                </TouchableWithoutFeedback>\n\n                \n            </KeyboardAvoidingView>\n            {/* <Text> {route.params.chatName} </Text> */}\n        </SafeAreaView>\n    )\n}\n\nexport default ChatScreen\n\nconst styles = StyleSheet.create({\n\n    container : {\n        flex : 1,\n\n    },\n    footer : {\n        flexDirection : 'row',\n        alignItems : 'center',\n        width : '100%',\n        padding : 15,\n    },\n\n    reciever : {\n        padding : 15,\n        backgroundColor : '#ECECEC',\n        alignSelf : 'flex-end',\n        borderRadius : 20 ,\n        marginRight : 15 ,\n        marginBottom : 20 ,\n        maxWidth : '80%',\n        position : 'relative',\n        \n\n    },\n\n    sender : {\n        padding : 15,\n        backgroundColor : '#50DBB4',\n        alignSelf : 'flex-start',\n        borderRadius : 20 ,\n        marginLeft : 15 ,\n        marginBottom : 20 ,\n        maxWidth : '80%',\n        position : 'relative',\n    },\n\n    senderName : {\n        left  : 5 ,\n        paddingRight : 10 ,\n        fontSize : 0.5 ,\n        color : 'white'\n    },\n    textInput : {\n        bottom : 0,\n        height : 40 ,\n        flex: 1 ,\n        marginRight : 15 ,\n        borderColor : 'transparent',\n        backgroundColor : '#ECECEC',\n        borderWidth : 1 ,\n        padding : 10 ,\n        color : 'gray' ,\n        borderRadius : 30\n    }\n})\n","import { NavigationContainer } from '@react-navigation/native';\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport {createStackNavigator} from '@react-navigation/stack'\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport AddChatScreen from './screens/AddChatScreen';\nimport ChatScreen from './screens/ChatScreen';\n\n\nconst Stack = createStackNavigator()\n\n// globalScreenOptions\n\nconst globalScreenOptions = {\n  headerStyle : {backgroundColor : '#3944F0'},\n  headerTitleStyle : {color : 'white'},\n  headerTintColor : 'white'\n}\nexport default function App() {\n  return (\n      <NavigationContainer>\n        <Stack.Navigator\n         initialRouteName = 'Login'\n        screenOptions = {globalScreenOptions}>\n              <Stack.Screen name = 'Login' component = {LoginScreen}></Stack.Screen>\n              <Stack.Screen name = 'Register' component = {RegisterScreen}></Stack.Screen>\n              <Stack.Screen name = 'Home' component = {HomeScreen}></Stack.Screen>\n              <Stack.Screen name = 'AddChat' component = {AddChatScreen}></Stack.Screen>\n              <Stack.Screen name = 'Chat' component = {ChatScreen}></Stack.Screen>\n        </Stack.Navigator>\n      </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"sourceRoot":""}